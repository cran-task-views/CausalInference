<CRANTaskView>
  <name>CausalInference</name>
  <topic>Causal Inference</topic>
  <maintainer email="mayer.imke@gmail.com">Imke Mayer, Pan Zhao and Julie Josse</maintainer>
  <version>2021-08-23</version>
  <url>https://misscausal.gitlabpages.inria.fr/misscausal.gitlab.io/software.html</url>
  <info>
    <p>
      Causal inference can be seen as a subfield of statistical analysis that addresses questions about effects of a treatment, intervention or policy on some target over a given sample or population. Under certain model assumptions, causal inferences can be carried out by fitting simple regression models or combining several regression models in a specific way as will be sketched out later. For observational data, additional untestable assumptions have to be made to (non-parametrically) identify causal effects.
    </p>
    <p>There do not exist basic R functions to do causal analyses straight away, but many methods - more or less complex - are implemented in different packages on CRAN, which we structure into main topics:</p>
    <ul>
      <li><a href="#rct">Methods for experimental data</a></li>
      <li><a href="#ate">Average treatment effect estimation and other univariate treatment effect estimates</a></li>
      <li><a href="#hte">Heterogeneous treatment effect estimation</a></li>
      <li><a href="#policy">Policy learning and dynamic treatment regimes</a></li>
      <li><a href="#dag">Do-calculus and causal discovery</a></li>
      <li><a href="#data">Specific types of data</a></li>
      <li><a href="#applications">Specific application fields</a></li>
    </ul>
    <p>If you think that we missed some important packages in this list, please contact the maintainers.</p>

    <p><a name="rct"><strong>Methods for randomized controlled trial (RCT) and other experimental data</strong></a></p>
    <ul>
      <li><i>Construction of experimental designs</i> is implemented in <pkg>blocksdesign</pkg> (blocks for general factorial treatment designs), <pkg>BCHM</pkg> (Bayesian cluster hierarchical model design for multiple subgroup basket trials), <pkg>Boptbd</pkg> (Bayesian optimal block designs under linear mixed effects model), <pkg>seqDesign</pkg> (sequential design of randomized two-stage treatment efficacy trials with time-to-event endpoints). Many other tools and packages exist for designing experiments and clinical trials, we refer to the <view>ExperimentalDesign</view> and <view>ClinicalTrials</view> CRAN Task Views.</li>
      <li><i>Tests based on pairwise comparisons</i> are provided in <pkg>BuyseTest</pkg>.</li>
      <li><i>Regression models</i> where the causal estimand is defined as a coefficient of a regression model are implemented in the packages <pkg>allestimates</pkg>.</li>
      <li><i>Evaluation of RCTs</i> is provided in <pkg>experiment</pkg> (various statistical methods), <pkg>eefAnalytics</pkg> (Frequentist and Bayesian multilevel models), <pkg>ipcwswitch</pkg> (IPW adapted to treatment switch in an RCT), <pkg>idem</pkg> (with death and missingness).</li>
      <li><i>Posterior analysis tools</i> are implemented in <pkg>beanz</pkg> (Bayesian HTE models), <pkg>cjoint</pkg> (conjoint analysis for survey experiments).</li>
      <li>Design and analysis of <i>two-stage preference trials</i> is implemented in <pkg>preference</pkg>.</li>
      <li><pkg>interferenceCI</pkg> implements treatment effect estimation methods for two-stage randomized experiments with interference and binary outcome.</li>
      <li>In case of <i>non-compliance</i>, <pkg>rpsftm</pkg> uses g-estimation to estimate the causal effect of a treatment in a two-armed randomised control trial where non-compliance exists and is measured, under an assumption of an accelerated failure time model and no unmeasured confounders.</li>
      <li>A time series causal inference model for RCT under <i>spillover effect</i> is implemented in <pkg>SPORTSCausal</pkg>.</li>
      <li>Design and analysis of clinical non-inferiority or superiority trials with active and placebo control is implemented in <pkg>ThreeArmedTrials</pkg>.</li>
    </ul>

    <p><a name="ate"><strong>Average treatment effect estimation and other univariate treatment effect estimates</strong></a></p>
    <ul>
      <li><i>Regression models</i> where the causal estimand is a regression parameter are implemented in <pkg>estimatr</pkg>, <pkg>CausalGAM</pkg> (using generalized additive models), <pkg>sampleSelection</pkg> (two-step and maximum likelihood estimation of Heckman-type sample selection models), <pkg>BCEE</pkg> (Bayesian causal effect estimation for binary or continuous exposures and outcomes), <pkg>borrowr</pkg> (Bayesian PATE estimation for multiple exchangeable data sources), <pkg>causaldrf</pkg> (average causal dose response functions), <pkg>hdm</pkg> (efficient estimators with uniformly valid confidence intervals, it assumes approximately sparse models for high-dimensional settings).</li>
      <li><i>G-formula</i> and other <i>conditional outcome regression</i> based methods are supported in the packages <pkg>gfoRmula</pkg> (also for time-varying treatment and confounding), <pkg>EffectLiteR</pkg> (based on structural equation modeling), and <pkg>endoSwitch</pkg> (maximum likelihood estimation of endogenous switching regression models).</li>
      <li><i>Matching</i> methods are implemented in <pkg>Matching</pkg> (multivariate and propensity score matching, and finding optimal balance based on a genetic search algorithm), <pkg>MatchIt</pkg> (selecting matched samples of the original treated and control groups with similar covariate distributions), <pkg>MatchThem</pkg> (pre-processing techniques of matching and weighting multiply imputed datasets), <pkg>optmatch</pkg> (distance based bipartite matching using the RELAX-IV minimum cost flow solver), <pkg>CMatching</pkg> (for cluster data), <pkg>FLAME</pkg> (almost-matching-exactly via learned weighted Hamming distance).</li>
      <li><i>Inverse propensity weighting</i> (IPW, also known as inverse probability of treatment weighting, IPTW) methods are implemented in <pkg>ipw</pkg>, <pkg>causalweight</pkg>, <pkg>estimatr</pkg>, <pkg>clusteredinterference</pkg> and <pkg>inferference</pkg> (the latter two both making interference assumptions), <pkg>hrIPW</pkg> (under a Cox proportional hazards model), <pkg>ipwCoxCSV</pkg> (corrected sandwich variance estimation for the IPW Cox model), <pkg>ipwErrorY</pkg> (correction methods for the IPW estimation with misclassified binary outcomes). <pkg>autoCovariateSelection</pkg> offers automated covariate selection for high-dimensional propensity scores. In case of <i>ordinal or multinomial treatment</i>, <pkg>GPSCDF</pkg> allows to estimate generalized propensity score cumulative distribution functions.</li>
      <li>Other <i>balancing score weighting </i>methods for balancing covariate distributions are available in <pkg>CBPS</pkg> (for binary and multivalued exposures, optionally in longitudinal settings). <pkg>PSweight</pkg> implements a set of tools for propensity score weighting analysis of observational studies and randomized trials. <pkg>pstest</pkg> provides specification tests for parametric propensity score models. <pkg>twang</pkg> provides a set of functions for propensity score estimating and weighting, nonresponse weighting, and diagnosis of the weights (of nonequivalent groups). <pkg>twangContinuous</pkg> provides functions for propensity score estimation and weighting for continuous exposures.</li>
      <li><i>Doubly robust methods</i> are implemented in <pkg>grf</pkg> (function <code>average_treatment_effect</code>), in <pkg>causalweight</pkg> and in <pkg>DoubleML</pkg> (function <code>DoubleMLIRM</code>).</li>
      <li><i>Targeted learning</i> (also known as targeted maximum likelihood estimation or targeted minimum loss-based estimation) methods are available in <pkg>drtmle</pkg>, <pkg>tmle</pkg>, and <pkg>ltmle</pkg> (for longitudinal data).</li>
      <li><i>Difference in differences</i> methods are implemented in <pkg>DRDID</pkg> (doubly robust estimators with two choices for nuisance function estimation), <pkg>bacondecomp</pkg> (using the Goodman-Bacon decomposition to allow for variation in treatment timing), <pkg>did</pkg> (for cases with more than two periods and with variation in treatment timing), and in <pkg>qte</pkg>.</li>
      <li><i>Quantile treatment effects</i> can be estimated using the <pkg>qte</pkg>, <pkg>Counterfactual</pkg> and <pkg>grf</pkg> packages.</li>
      <li><i>Odds ratio</i> estimation and power calculation for the <i>Trend in Trend</i> model is implemented in <pkg>TrendInTrend</pkg>.</li>
      <li><i>Synthetic control</i> methods are implemented in <pkg>Synth</pkg> (using a group method for comparative case studies), <pkg>microsynth</pkg> (for micro- and meso-level data), and <pkg>gsynth</pkg> (extension to multiple treated units and variable treatment periods.</li>
      <li><i>Instrumental variable</i> methods are implemented in <pkg>ivmodel</pkg>, <pkg>ivpack</pkg> (including power analysis, sensitivity analysis, and diagnostics), <pkg>bpbounds</pkg> (nonparametric bounds on ATE), <pkg>grf</pkg>, <pkg>estimatr</pkg>, and <pkg>DoubleML</pkg> (function <code>DoubleMLIIVM</code>). <pkg>ivmte</pkg> provides a choice-theoretic interpretation to IV models using <i>Marginal Treatment Effects</i> to extrapolate from the compliers to estimate treatment effects for other subpopulations; and estimation using local IVs is implemented in <pkg>localIV</pkg>. <pkg>LARF</pkg> uses Local Average Response Functions for IV estimation of treatment effects with binary endogenous treatment and instrument. <pkg>icsw</pkg> implements inverse compliance score weighting for estimating average treatment effects with an instrumental variable.</li>
      <li><i>Mediation analysis</i> can be performed with <pkg>cfma</pkg> (functional mediation analysis), <pkg>cit</pkg> (likelihood-based tests), <pkg>MultisiteMediation</pkg> (multisite trials), <pkg>DirectEffects</pkg> (controlled direct effect when fixing a potential mediator to a specific value). <pkg>mediation</pkg> and <pkg>cfdecomp</pkg> implement identification, inference and <pkg>mediation</pkg> additionally also provides sensitivity analysis for causal mediation effects. Linear mediation analysis for complex surveys using balanced repeated replication is implemented in <pkg>MedSurvey</pkg>. <pkg>paths</pkg> uses an imputation approach to estimate path-specific causal effects along with a set of bias formulas for conducting sensitivity analysis. <pkg>regmedint</pkg> implements regression-based analysis with a treatment-mediator interaction term. <pkg>gma</pkg> performs Granger mediation analysis for time series.</li>
      <li>Under <i>interference,</i> causal effect estimation can be achieved using <pkg>inferference</pkg> by inverse-probability weighted (IPW) estimators, <pkg>netchain</pkg> on collective outcomes by chain graph models approximating the projection of the full longitudinal data onto the observed data, and <pkg>interferenceCI</pkg> provides some exact confidence intervals for treatment effects on a binary outcome in two-stage randomized experiments with interference</li>
      <li>Diagnostics and visualization for <i>Multiplicative Interaction Models</i> are implemented in <pkg>interflex</pkg>.</li>
      <li><pkg>InvariantCausalPrediction</pkg> provides confidence intervals for causal effects, using data collected in different experimental or environmental conditions (with hidden variables), extensions to nonlinear models are implemented in <pkg>nonlinearICP</pkg>.</li>
      <li><i>Regression discontinuity design</i> (RDD) methods are implemented in <pkg>rddensity</pkg> (density discontinuity testing (also known as manipulation testing)), <pkg>rdlocrand</pkg> (inference under local randomization), <pkg>rdmulti</pkg> (analysis with multiple cutoffs or scores); tools to perform power, sample size and minimum detectable effects (MDE) calculations are available in <pkg>rdpower</pkg>, robust confidence interval construction and bandwidth selection are implemented in <pkg>rdrobust</pkg>, <pkg>RATest</pkg> provides a collection of randomization tests, including a permutation test for the continuity assumption of the baseline covariates in the sharp RDD.</li>
      <li>Regularized calibrated estimation of the average treatment effects (ATE) and local average treatment effects (LATE) is implemented in <pkg>RCAL</pkg>.</li>
      <li><pkg>WhatIf</pkg> offers easy-to-apply methods to evaluate counterfactuals that do not require sensitivity testing over specified classes of models.</li>
    </ul>
    <p>In addition, <pkg>causalsens</pkg>, <pkg>hettx</pkg>, <pkg>dstat</pkg> provide functions for <i>sensitivity analyses</i>, <pkg>ui</pkg> implements functions to derive uncertainty intervals and conduct sensitivity analysis for missing data and unobserved confounding. <pkg>BalanceCheck</pkg> provides tests to assess balancing of the treatment groups after matching, <pkg>cobalt</pkg> generates balance tables and plots before and after covariate balancing, and <pkg>confoundr</pkg> implements covariate-balance diagnostics for time-varying confounding.</p>


    <p><a name="hte"><strong>Heterogeneous treatment effect estimation</strong></a></p>
    <p>Some of the above mentioned packages can also be used for heterogeneous treatment effect (HTE) estimation.</p>
    <ul>
      <li><i>Bayesian approaches</i> for individual causal effect estimation are available in several packages including <pkg>bartCause</pkg> (based on Bayesian Additive Regression Trees) and <pkg>bcf</pkg> (Bayesian Causal Forst).</li>
      <li><i>Efficacious treatment or population subset selection</i> exploiting treatment effect heterogeneity is implemented in <pkg>FindIt</pkg> and <pkg>grf</pkg>. This latter package supports missing covariate values using the Missing Incorporated in Attributes approach. Additionally the package <pkg>subdetect</pkg> provides a test for the existence of a subgroup with enhanced treatment effect.</li>
      <li>Other approaches for personalized causal predictions are provided by <pkg>EffectTreat</pkg> (exploiting correlation-based expressions), and for randomized data by <pkg>evalITR</pkg> (it additionally allows for defining budget constraints) and by <pkg>SortedEffects</pkg> (estimation and inference methods for sorted causal effects and classification analysis).</li>
      <li><pkg>stepp</pkg> provides diagnostic plots to explore <i>treatment-covariate interactions</i> for survival or generalized linear models, applicable for continuous, binomial and count data arising from two or more treatment arms of a clinical trial.</li>
    </ul>

    <p><a name="policy"><strong>Policy learning and dynamic treatment regimes</strong></a></p>
    <ul>
      <li>Estimation of an optimal dynamic treatment regime (DTR) is implemented in <pkg>iqLearn</pkg> and <pkg>DynTxRegime</pkg> (using interactive Q-learning), <pkg>listdtr</pkg> (using list-based rules), <pkg>qLearn</pkg> (Q-learning for two stage sequentially randomized trials). <pkg>quantoptr</pkg> implements estimation methods for optimal treatment regimes under marginal quantile, marginal mean, and mean absolute difference. <pkg>DTRreg</pkg> proposes different methods such as G-estimation, dynamic weighted OLS and Q-learning, as well as several variance estimation approaches, it can handle survival outcomes and continuous treatment variables. <pkg>QTOCen</pkg> provides methods for estimation of mean- and quantile-optimal treatment regimes from censored data.</li>
      <li><pkg>ITRLearn</pkg> implements maximin-projection learning for recommending a meaningful and reliable individualized treatment regime, and also Q-learning and A-learning for estimating the group-wise contrast function. <pkg>ITRSelect</pkg> implements sequential advantage selection and penalized A-learning for selecting important variables in optimal individualized (dynamic) treatment regime in both single-stage or multi-stage studies. <pkg>OTRselect</pkg> implements a penalized regression method that can simultaneously estimate the optimal treatment strategy and identify important variables for either censored or uncensored continuous response.</li>
      <li><pkg>smartsizer</pkg> provides a set of tools for determining the necessary sample size in order to identify the optimal DTR in a <i>sequential, multiple assignment, randomized trial (SMART)</i>, <pkg>DTRlearn2</pkg> implements estimators for general K-stage DTRs from SMARTs with Q-learning and several outcome-weighted learning methods.</li>
      <li>Efficient estimation of the population-level causal effects of stochastic interventions on a continuous-valued exposure is implemented in <pkg>txshift</pkg> </li>
      <li><pkg>lpdensity</pkg> implements a density (and derivatives) estimator based on local polynomial regressions for counterfactual analysis, program evaluation, and policy recommendations.</li>
      <li>Estimation of treatment decision rules from a randomized clinical trial using Single-Index Models with Multiple-Links is implemented in <pkg>simml</pkg>, Single-Index Models with a Surface-Link for optimizing individualized dose rules from an observational study is implemented in <pkg>simsl</pkg>.</li>
    </ul>

    <p><a name="dag"><strong>Do-calculus and causal discovery</strong></a></p>
    <ul>
      <li><i>Identifiability</i> is addressed by <pkg>causaleffect</pkg> and <pkg>dosearch</pkg> providing algorithms to decide whether a causal effect is identifiable or not and by <pkg>CausalQueries</pkg> that calculates arbitrary estimands for a given causal model; <pkg>causaloptim</pkg> provides tight bounds for a user defined DAG, query and constraints using a symbolic linear optimizer.</li>
      <li><pkg>pcalg</pkg> provides a set of functions for <i>causal structure learning</i>: PC (for observational data without hidden variables), FCI and RFCI (for observational data with hidden variables), and GIES (for a mix of observational and interventional data) without hidden variables); and for causal inference using graphical models: the IDA algorithm, the Generalized Backdoor Criterion (GBC), the Generalized Adjustment Criterion (GAC); incorporating background knowledge is also possible.</li>
      <li><i>Estimation of causal effects</i> is possible in  <pkg>CIEE</pkg> using estimating equations derived from a DAG and in <pkg>InvariantCausalPrediction</pkg> using adjustment sets derived from conditional independence tests that leverage causal invariances across environments.</li>
      <li><i>Causal networks estimation</i> is implemented in <pkg>CompareCausalNetworks</pkg>.</li>
      <li><pkg>generalCorr</pkg>  computes generalized correlations, partial correlations and <i>plausible causal paths</i>.</li>
      <li>Constrained maximum likelihood estimation of a DAG with intervention or observation data is implemented in <pkg>intdag</pkg> for linear Gaussian SEM.</li>
    </ul>
    <p>In addition, <pkg>dagitty</pkg> provides a graphical tool to represent and analyze structural causal models (a web-based environment is also available: <a href="http://dagitty.net">DAGitty</a>).</p>


    <p><a name="data"><strong>Specific types of data</strong></a></p>
    <ul>
      <li><i>Longitudinal data / time series and censored data</i>: Causal effect estimation for time series is implemented in <pkg>CausalImpact</pkg> (using a Bayesian approach), <pkg>confoundr</pkg> (covariate-balance diagnostics), and <pkg>CausalMBSTS</pkg> (for multivariate responses).</li>
      <li>Other packages, such as <pkg>PanelMatch</pkg> implements a set of matching methods to time-series cross-sectional data, are dedicated to time series but also contain some (often basic) methods to handle missing data (see also <view>MissingData</view>).</li>
      <li><i>GWAS and SNPs</i>: <pkg>CKAT</pkg> implements kernel based methods to jointly test genetic main effect and gene-treatment interaction effects for a set of SNPs. <pkg>epiGWAS</pkg> provides functions to perform robust epistasis detection in GWAS.</li>
      <li><i>Example data sets</i> to run frequent example problems from causal inference textbooks are accessible through the <pkg>causaldata</pkg> package.</li>
      <li>Weighted, two-mode, and longitudinal networks analysis is implemented in <pkg>tnet</pkg> </li>
    </ul>

    <p><a name="applications"><strong>Specific application fields</strong></a></p>
    <ul>
      <li>Behavior change sciences use specialized analyses and visualization tools implemented in <pkg>behaviorchange</pkg>.</li>
      <li>Evaluation of biomarkers and estimation of treatment-biomarker effects can be done using tools from <pkg>bhm</pkg> (for biomarker-treatment effects).</li>
      <li>Qualitative Comparative Analysis type methods are implemented in <pkg>cna</pkg>.</li>
      <li><i>Mendelian randomization methods</i> used to examine causal effects related to certain genes are implemented in <pkg>MendelianRandomization</pkg>, <pkg>mr.raps</pkg> (two-sample Mendelian randomization with summary statistics by using Robust Adjusted Profile Score), <pkg>MRPC</pkg> (PC algorithm with the principle of Mendelian Randomization).</li>
      <li>Causal inference approaches in genetic systems exploit quantitative trait loci (QTL) genotypes to infer causal relationships among phenotypes: functions to simultaneously infer causal graphs and genetic architecture (acyclic and cyclic) are implemented in <pkg>qtlnet</pkg>.</li>
      <li><pkg>tools4uplift</pkg> uplift modeling aims at predicting the causal effect of an action such as a marketing campaign on a particular individual.</li>
      <li><i>Coincidence analysis</i> through configurational comparative methods is provided by <pkg>cna</pkg>.</li>
    </ul>
  </info>

  <packagelist>
    <pkg>allestimates</pkg>
    <pkg>autoCovariateSelection</pkg>
    <pkg>bacondecomp</pkg>
    <pkg>BalanceCheck</pkg>
    <pkg>bartCause</pkg>
    <pkg>BCEE</pkg>
    <pkg>bcf</pkg>
    <pkg>BCHM</pkg>
    <pkg>beanz</pkg>
    <pkg>behaviorchange</pkg>
    <pkg>bhm</pkg>
    <pkg>blocksdesign</pkg>
    <pkg>Boptbd</pkg>
    <pkg>borrowr</pkg>
    <pkg>bpbounds</pkg>
    <pkg>BuyseTest</pkg>
    <pkg>causaldata</pkg>
    <pkg>causaldrf</pkg>
    <pkg>causaleffect</pkg>
    <pkg>CausalGAM</pkg>
    <pkg>CausalImpact</pkg>
    <pkg>CausalMBSTS</pkg>
    <pkg>causaloptim</pkg>
    <pkg>CausalQueries</pkg>
    <pkg>causalsens</pkg>
    <pkg>causalweight</pkg>
    <pkg>CBPS</pkg>
    <pkg>cfdecomp</pkg>
    <pkg>cfma</pkg>
    <pkg>CIEE</pkg>
    <pkg>cit</pkg>
    <pkg>cjoint</pkg>
    <pkg>CKAT</pkg>
    <pkg>clusteredinterference</pkg>
    <pkg>CMatching</pkg>
    <pkg>cna</pkg>
    <pkg priority="core">cobalt</pkg>
    <pkg>CompareCausalNetworks</pkg>
    <pkg>confoundr</pkg>
    <pkg>Counterfactual</pkg>
    <pkg priority="core">dagitty</pkg>
    <pkg>did</pkg>
    <pkg>DirectEffects</pkg>
    <pkg>dosearch</pkg>
    <pkg>DoubleML</pkg>
    <pkg>DRDID</pkg>
    <pkg>drtmle</pkg>
    <pkg>dstat</pkg>
    <pkg>DTRlearn2</pkg>
    <pkg>DTRreg</pkg>
    <pkg>DynTxRegime</pkg>
    <pkg>eefAnalytics</pkg>
    <pkg>EffectLiteR</pkg>
    <pkg>EffectTreat</pkg>
    <pkg>endoSwitch</pkg>
    <pkg>epiGWAS</pkg>
    <pkg>estimatr</pkg>
    <pkg>evalITR</pkg>
    <pkg>experiment</pkg>
    <pkg>FindIt</pkg>
    <pkg>FLAME</pkg>
    <pkg>generalCorr</pkg>
    <pkg>gfoRmula</pkg>
    <pkg>gma</pkg>
    <pkg>GPSCDF</pkg>
    <pkg priority="core">grf</pkg>
    <pkg>gsynth</pkg>
    <pkg>hdm</pkg>
    <pkg>hettx</pkg>
    <pkg>hrIPW</pkg>
    <pkg>icsw</pkg>
    <pkg>idem</pkg>
    <pkg>inferference</pkg>
    <pkg>intdag</pkg>
    <pkg>interferenceCI</pkg>
    <pkg>interflex</pkg>
    <pkg>InvariantCausalPrediction</pkg>
    <pkg>ipcwswitch</pkg>
    <pkg>ipw</pkg>
    <pkg>ipwCoxCSV</pkg>
    <pkg>ipwErrorY</pkg>
    <pkg>iqLearn</pkg>
    <pkg>ITRLearn</pkg>
    <pkg>ITRSelect</pkg>
    <pkg>ivmodel</pkg>
    <pkg>ivmte</pkg>
    <pkg>ivpack</pkg>
    <pkg>LARF</pkg>
    <pkg>listdtr</pkg>
    <pkg>localIV</pkg>
    <pkg>lpdensity</pkg>
    <pkg>ltmle</pkg>
    <pkg priority="core">Matching</pkg>
    <pkg priority="core">MatchIt</pkg>
    <pkg>MatchThem</pkg>
    <pkg>mediation</pkg>
    <pkg>MedSurvey</pkg>
    <pkg>MendelianRandomization</pkg>
    <pkg>microsynth</pkg>
    <pkg>mr.raps</pkg>
    <pkg>MRPC</pkg>
    <pkg>MultisiteMediation</pkg>
    <pkg>netchain</pkg>
    <pkg>nonlinearICP</pkg>
    <pkg>optmatch</pkg>
    <pkg>OTRselect</pkg>
    <pkg>PanelMatch</pkg>
    <pkg>paths</pkg>
    <pkg priority="core">pcalg</pkg>
    <pkg>preference</pkg>
    <pkg>pstest</pkg>
    <pkg>PSweight</pkg>
    <pkg>qLearn</pkg>
    <pkg>qte</pkg>
    <pkg>qtlnet</pkg>
    <pkg>QTOCen</pkg>
    <pkg>quantoptr</pkg>
    <pkg>RATest</pkg>
    <pkg>RCAL</pkg>
    <pkg>rddensity</pkg>
    <pkg>rdlocrand</pkg>
    <pkg>rdmulti</pkg>
    <pkg>rdpower</pkg>
    <pkg>rdrobust</pkg>
    <pkg>regmedint</pkg>
    <pkg>rpsftm</pkg>
    <pkg>sampleSelection</pkg>
    <pkg>seqDesign</pkg>
    <pkg>simml</pkg>
    <pkg>simsl</pkg>
    <pkg>smartsizer</pkg>
    <pkg>SortedEffects</pkg>
    <pkg>SPORTSCausal</pkg>
    <pkg>stepp</pkg>
    <pkg>subdetect</pkg>
    <pkg>Synth</pkg>
    <pkg>ThreeArmedTrials</pkg>
    <pkg priority="core">tmle</pkg>
    <pkg>tnet</pkg>
    <pkg>tools4uplift</pkg>
    <pkg>TrendInTrend</pkg>
    <pkg>twang</pkg>
    <pkg>twangContinuous</pkg>
    <pkg>txshift</pkg>
    <pkg>ui</pkg>
    <pkg>WhatIf</pkg>
  </packagelist>

  <links>
    <view>ClinicalTrials</view>
    <view>Econometrics</view>
    <view>ExperimentalDesign</view>
    <view>MetaAnalysis</view>
    <view>MissingData</view>
    <view>Survival</view>
    <!--<bioc>impute</bioc>-->
    <!--<bioc priority="core">pcaMethods</bioc>-->
    <a href="http://dagitty.net">DAGitty: draw and analyze causal diagrams</a>
  </links>
</CRANTaskView>
